\documentclass{article}
\usepackage[left=0.5in,right=0.5in,top=1in,bottom=1in]{geometry}
\usepackage{multicol}
\usepackage{graphicx}
\usepackage{amsmath}

\usepackage{listings}
\lstset{language=sas,
basicstyle=\ttfamily\footnotesize,
frame=single}

\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{Last Update: \today}
\chead{Graph Centralities}
\rhead{Jennifer Chang}

\begin{document}
\SweaveOpts{concordance=TRUE}


<<eval=FALSE>>=
# -------------------------------------- Libraries

install.packages("igraph")
library(igraph)
library(ggplot2)

# -------------------------------------- Functions

# Converts an edgelist to a graph
edge2graph <- function(x,directed=FALSE){
  if(dim(x)[2]<2) stop("Edgelist must have two columns")
  el <- as.matrix(x)
  el[,1] <- as.character(el[,1])
  el[,2] <- as.character(el[,2])
  return(graph.edgelist(el,directed=directed))
}

# -------------------------------------- Analysis
g<-list() # Will contain all graphs

data <- read.table("data/cytoscape-network.ssv", header = TRUE, stringsAsFactors = FALSE, sep = " ");
tail(data) # DEBUG: make sure load whole file

g$C <- edge2graph(data)

data <- read.table("data/IPA+Ingenuity+Pathway+Analysis-network.ssv", header = TRUE, stringsAsFactors = FALSE, sep = " ");
g$J <- edge2graph(data)
data <- read.table("data/VisANT-network.ssv", header = TRUE, stringsAsFactors = FALSE, sep = " ");
g$V <- edge2graph(data)
#data <- read.table("data/gephi-network.ssv", header = TRUE, stringsAsFactors = FALSE, sep = " ");
#g$G <- edge2graph(data)
data <- read.table("data/pathway+studio-network.ssv", header = TRUE, stringsAsFactors = FALSE, sep = " ");
g$P <- edge2graph(data)

# Connected Components
graphnames <- c("Cytoscape","IPA","VisANT","PathwayStudio")
summaryGraphs <- data.frame(graph=graphnames,clusters=rep(0,length(graphnames)))
rownames(summaryGraphs) <- graphnames

summaryGraphs["Cytoscape","clusters"] <- clusters(g$C)$no
summaryGraphs["IPA","clusters"] <- clusters(g$J)$no
summaryGraphs["VisANT","clusters"] <- clusters(g$V)$no
summaryGraphs["PathwayStudio","clusters"] <- clusters(g$P)$no

summaryGraphs

temp <- data.frame(degree=degree(g_c), betweenness=betweenness(g_c), closeness=closeness(g_c)) 
qplot(closeness, degree, data=subset(temp,degree>1))
qplot(degree, betweenness,data=subset(temp,degree>1), alpha=I(0.25))
qplot(graph,clusters,data=datasummary)

clusters(g_c)$no
names(clusters(g_c))

@



\end{document}